#include "Arcade.h"

#include "../RobotMap.h"



#include "../Commands/TankDrive.h"



Arcade::Arcade() : Subsystem("Arcade")
{

	m_right_encoder = RobotMap::driveTraindBaseEncoderR;
	m_left_encoder = RobotMap::driveTraindBaseEncoderL;
    dBaseL1 = RobotMap::driveTraindBaseL1;
    dBaseL2 = RobotMap::driveTraindBaseL2;
    dBaseR1 = RobotMap::driveTraindBaseR1;
    dBaseR2 = RobotMap::driveTraindBaseR2;
    m_gyro = RobotMap::driveTraindBaseGyro;
    // You should probably add gyro for course correction, but I am going to be mega lazy and just use the encoders
    // If we were only using one encoder, you would be forced to use the gyro, but thanks for allowing my laziness!
    //dBaseGyro = RobotMap::driveTraindBaseGyro;



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// Initialize the robot drive. The constructor is documented at

	// http://first.wpi.edu/FRC/roborio/release/docs/cpp/classRobotDrive.html#a47180c144fcca9e7550f7cb906c8b79a

	arcade = new RobotDrive(

		    dBaseL1,

		    dBaseL2,

		    dBaseR1,

		    dBaseR2);




	arcade->SetSafetyEnabled(false);

}



void Arcade::InitDefaultCommand() {

    // Set the default command for a subsystem here.

    // SetDefaultCommand(new MySpecialCommand());



        SetDefaultCommand(new TankDrive());

}


/*
void Arcade::MyDrive(float left, float right)

{

	arcade->TankDrive(left, right);

}
*/


//void Arcade::MyDrive(Joystick * moveStick, int moveChannel, Joystick *rotateStick, int rotateChannel);

/*{

	arcade->ArcadeDrive(moveStick->GetY(), moveChannel, rotateStick->GetX(), rotateChannel);

}*/

int Arcade::GetRightEncoder()
{
	return m_right_encoder->Get();
}

int Arcade::GetLeftEncoder()
{
	return m_left_encoder->Get();
}

float Arcade::GetYaw()
{
	return m_gyro->GetAngle();
}

void Arcade::ResetEncoders()
{
	m_left_encoder->Reset();
	m_right_encoder->Reset();
}

void Arcade::CalibrateGyro()
{
	m_gyro->Calibrate();
}


void Arcade::Stop()
{
	arcade->TankDrive(0., 0.);
}



// Put methods for controlling this subsystem

// here. Call these from Commands.
